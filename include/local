#!/bin/zsh

# Fetch database and files from Pantheon.
# Expects Pantheon sitename passed, uses live environment.
if type $terminus >/dev/null 2>&1; then
  if type terminus rsync >/dev/null 2>&1; then

    create_nginx () {
      replace=''
      nginxDir=${nginx/'default'/$replace}

      if [[ ! -f "$nginxDir/$directory.conf" ]]; then
        cp "$nginx $nginxDir$1.conf"
        
        # Run again to edit file.
        create_nginx "$1"
      else
        sed -i '' "s/localhost/$directory/g" "$nginxDir$directory.conf"
        sed -i '' 's/#include \/usr\/local\/etc\/nginx\/conf.d\/drupal8.conf;/include \/usr\/local\/etc\/nginx\/conf.d\/drupal8.conf;/' "$nginxDir/$directory.conf"
      fi
    }

    if [[ $localValue ]]; then
      # Check if provided directory exists locally.
      # Check without prefix first, as this is most likely.
      if [[ -d $HOME/$projectsDirectory/${localValue//$pantheonPrefix/} ]]; then
        directory=${localValue//$pantheonPrefix/}
      else
        # Check with prefix.
        if [[ ! -d "$HOME/$projectsDirectory/$localValue" ]]; then
          echo
          echo 'What project are we putting these files into? Parent directory name.'
          read directory
        fi
      fi



      # Get code.
      if [[ ! -d "$HOME/$projectsDirectory/$directory" ]]; then
        gitConnection=$(terminus connection:info $localValue.dev --fields='Git Command' --format=string)
        gitConnection=${gitConnection/'aai'/"$HOME/$projectsDirectory/"}

        echo 'Grabbing code...'      
        eval $gitConnection
        echo 'Code complete.'
      fi

      # Get database.
      sqlFile="$HOME/$projectsDirectory/$directory/$directory.sql"
      connection=$(terminus connection:info $localValue.live --field='MySQL Command')
      connection=${connection/'mysql'/'mysqldump -v'}
      connection="$connection > $sqlFile"

      echo
      echo 'Downloading database...'
      eval $connection
      echo 'Database download complete.'

      # Create local database.
      echo
      echo "Creating/updating $directory database..."
      create="mysql -u $sqlUser -p -e 'create database if not exists $directory'"
      eval $create
      echo 'Done.'

      # Import local database.
      echo
      echo 'Importing downloaded database into local database...'
      import="mysql -u $sqlUser -p $directory < $sqlFile"
      eval $import
      echo 'Done.'
      echo
      

      # Get files.
      if [[ -d "$HOME/$projectsDirectory/$directory" ]]; then
        get_subdirectory "$HOME/$projectsDirectory/" "$directory"

        echo 'Fetching files...'

        # If no subdirectory is set, we know we are in the webroot.
        if [[ -z $sub ]]; then
          if [[ ! -d "$HOME/$projectsDirectory/$directory/sites/default/files" ]]; then
            mkdir "$HOME/$projectsDirectory/$directory/sites/default/files"
          fi

          sync="terminus rsync $localValue.live:files/ $HOME/$projectsDirectory/$directory/sites/default/files -- --progress"
          eval $sync
        else
          if [[ ! -d "$HOME/$projectsDirectory/$directory/web/sites/default/files" ]]; then
            mkdir "$HOME/$projectsDirectory/$directory/web/sites/default/files"
          fi

          sync="terminus rsync $localValue.live:files/ $HOME/$projectsDirectory/$directory/web/sites/default/files -- --progress"
          eval $sync
        fi

        echo 'Files retreived'
      fi

      # Create nginx configuration.
      create_nginx "$directory"
      sudo brew services restart nginx

      # Add Drupal settings file
      cp base/settings.local.php "$HOME/$projectsDirectory/$directory/sites/default"
      sed -i '' "s/[database-name]/$directory/" "$HOME/$projectsDirectory/$directory/sites/default/settings.local.php"
    fi
  else
    echo
    echo 'You need to install the awesomeness of terminus rsync, its a terminus plugin.'
    echo 'Mind if I install it? Respond y or n.'
    read response

    if [[ $response == 'y' || $response == 'yes' ]]; then
      if [[ ! -d $HOME/.terminus/plugins ]]; then
        echo 'Creating terminus plugins directory.'
        mkdir -p $HOME/.terminus/plugins
        echo 'Created.'
      else
        echo
        echo 'Terminus plugins directory already exists, moving along...'
      fi

      if [[ ! -d $HOME/.terminus/plugins/terminus-rsync-plugin ]]; then
        echo 'Installing Terminus Rsync Plugin...'
        composer create-project --no-dev -d $HOME/.terminus/plugins pantheon-systems/terminus-rsync-plugin:~1
        echo 'Plugin installed.'
      else
        echo 'Terminus Rsync Plugin is already installed... not sure how you got here, this is a bug. Add it to the issues queue: https://github.com/kazajhodo/launcher/issues'
        echo
      fi
    fi
  fi
fi
