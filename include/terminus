#!/bin/zsh

terminus_loop () {
  # 0 is always dev, on dev never attempt to deploy.
  if [[ $2 == 'dev' || $3 == true ]]; then
    terminus_sync_check
    $terminus drush "$site.$2" cr && $terminus -y drush "$site.$2" -- updb -y && $terminus drush "$site.$2" -- cim -y
  else
    $terminus -y env:deploy "$site.$2" && $terminus drush "$site.$2" cr && $terminus drush "$site.$2" -- updb -y && $terminus drush "$site.$2" -- cim -y
  fi
}

terminus_sync_check () {
  directory=${PWD##*/}
  ready=false
  delay=24

  until [[ $ready == true ]];
    do
      workflow=$(terminus workflow:info:status $site --fields=workflow,status --format=string)

      # Check status and workflow fields.
      if [[ $workflow == *succeeded* && $workflow == *'Sync code on "dev"'* ]]; then
        ready=true
        echo
        echo "Code sync complete to $site."
        echo

        if [[ $deploy == true ]]; then
          count=3
          echo
          echo 'Initiating deploy to live.'
          echo
        else
          echo
          echo 'Use -d option if you want to deploy.'
          echo
          exit 0
        fi
      else
        echo
        echo "Not yet ready, attempting again in $delay."
        echo
        sleep $delay
      fi
    done
}

# Check that terminus command exists.
if type $terminus >/dev/null 2>&1; then
  if [[ $terminusValue ]]; then
    declare steps=('dev' 'test' 'live')
    site=${terminusValue%.*}
    env=${terminusValue#*.}
    multi=false

    if [[ $site && $env ]]; then
      case $env in
        'dev')
          count=1
          ;;
        'test')
          count=2
          ;;
        'live')
          count=3
          ;;
        'php')
          $terminus env:info $site.live | grep 'PHP Version'
          exit 0
          ;;
        'sync')
          terminus_sync_check
          ;;
        *)
          echo
          echo 'Attempting to run against multidev.'
          echo
          multidev=$env
          multi=true
      esac

      i=1
      if [[ $count ]]; then
        while [[ $i -le $count ]]
        do
          terminus_loop "$i" "${steps[$i]}"
          ((i++))
        done
      else
        terminus_loop "$i" "$multidev" "$multi"
      fi
    fi
  fi
fi
