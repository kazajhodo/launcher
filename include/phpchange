#!/bin/bash

# Capture current php version.
phpversion=$(php -i aux | grep 'PHP Version' | head -1)
set -- $phpversion

# PHPVERSION example output: php extension version => 7.1.18.
# $5 = 7.1.18.
# Shortens to first 3 ex: 7.1.
phpversion="$4"
phpversion=${phpversion:0:3}

# If: php version passed and they are equal.
# Elif: only run if a change number was passed.
if [[ $phpversion && $phpversion == $phpchange ]]; then
  echo
  echo "HEY!"
  echo "Php current version and specified version are the same, you lunk."
  echo
  php -v
  echo

  # If a project is set.
  # We're still going to do stuff.
  if [[ $project ]]; then
    echo
    echo "I'll still open a project for a lunk though."
    echo "Opening $project."
    echo
  fi
elif [[ ! -z $phpchange ]]; then
  # Update php version and reload source.
  # Remove any php@ references within .zshrc file.
  awk '!/php@/' $phpExportTarget > temp && mv temp $phpExportTarget

  # Export new php version to path
  echo "export PATH=\"/usr/local/opt/php@$phpchange/bin:/usr/local/opt/php@$phpchange/sbin:\$PATH\"" >> $phpExportTarget

  # Reload source to ensure we have current php version.
  source '/etc/profile'

  echo "Updated php export definitions within $phpExportTarget, reloaded source."
  echo 'Swapping php versions.'

  # Changing php version.
  brew services stop php@$phpversion
  brew unlink php@$phpversion && brew link php@$phpchange --force
  brew services start php@$phpchange

  # Reload source again to ensure we have switched php version.
  source '/etc/profile'

  # Show running version of php.
  echo
  echo 'Current system php version:'
  ps aux | grep php
  echo

  #Show running console version of php.
  echo
  echo 'Current terminal php version:'
  echo
  php -v
  echo
fi
